// <auto-generated />
using System;
using ITJobs.DLL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ITJobs.DLL.Migrations
{
    [DbContext(typeof(ITJobsContext))]
    partial class ITJobsContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.0.0-preview5.19227.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ITJobs.Model.Models.Ad", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AdCategoryId");

                    b.Property<int?>("CompanyId");

                    b.Property<DateTime>("Date");

                    b.Property<string>("JobSummary");

                    b.Property<string>("Location");

                    b.Property<int>("NumberOfWorkingHours");

                    b.Property<string>("RequiredSkills");

                    b.Property<string>("Title");

                    b.HasKey("Id");

                    b.HasIndex("AdCategoryId");

                    b.HasIndex("CompanyId");

                    b.ToTable("Ad");
                });

            modelBuilder.Entity("ITJobs.Model.Models.AdCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("AdCategory");
                });

            modelBuilder.Entity("ITJobs.Model.Models.Company", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AboutCompany");

                    b.Property<string>("Address");

                    b.Property<string>("BussinesType");

                    b.Property<string>("Email");

                    b.Property<int>("Established");

                    b.Property<string>("LogoLink");

                    b.Property<string>("Name");

                    b.Property<int>("NumberOfEmployees");

                    b.Property<string>("Password");

                    b.Property<string>("PhoneNumber");

                    b.Property<string>("WebAddress");

                    b.HasKey("Id");

                    b.ToTable("Company");
                });

            modelBuilder.Entity("ITJobs.Model.Models.DataBase", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("DataBase");
                });

            modelBuilder.Entity("ITJobs.Model.Models.Individual", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address");

                    b.Property<string>("Biography");

                    b.Property<DateTime>("DateOfBirth");

                    b.Property<string>("Email");

                    b.Property<string>("FirstName");

                    b.Property<string>("LastName");

                    b.Property<string>("Password");

                    b.Property<string>("PhoneNumber");

                    b.Property<string>("Skills");

                    b.HasKey("Id");

                    b.ToTable("Individual");
                });

            modelBuilder.Entity("ITJobs.Model.Models.IndividualDataBase", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("DataBaseId");

                    b.Property<int?>("IndividualId");

                    b.HasKey("Id");

                    b.HasIndex("DataBaseId");

                    b.HasIndex("IndividualId");

                    b.ToTable("IndividualDataBase");
                });

            modelBuilder.Entity("ITJobs.Model.Models.IndividualProgrammingLanguage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("IndividualId");

                    b.Property<int?>("ProgrammingLanguageId");

                    b.HasKey("Id");

                    b.HasIndex("IndividualId");

                    b.HasIndex("ProgrammingLanguageId");

                    b.ToTable("InduvidualProgrammingLanguage");
                });

            modelBuilder.Entity("ITJobs.Model.Models.ProgrammingLanguage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("ProgrammingLanguage");
                });

            modelBuilder.Entity("ITJobs.Model.Models.Ad", b =>
                {
                    b.HasOne("ITJobs.Model.Models.AdCategory", "AdCategory")
                        .WithMany()
                        .HasForeignKey("AdCategoryId");

                    b.HasOne("ITJobs.Model.Models.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId");
                });

            modelBuilder.Entity("ITJobs.Model.Models.IndividualDataBase", b =>
                {
                    b.HasOne("ITJobs.Model.Models.DataBase", "DataBase")
                        .WithMany()
                        .HasForeignKey("DataBaseId");

                    b.HasOne("ITJobs.Model.Models.Individual", "Individual")
                        .WithMany("IndividualDataBases")
                        .HasForeignKey("IndividualId");
                });

            modelBuilder.Entity("ITJobs.Model.Models.IndividualProgrammingLanguage", b =>
                {
                    b.HasOne("ITJobs.Model.Models.Individual", "Individual")
                        .WithMany("IndividualProgrammingLanguages")
                        .HasForeignKey("IndividualId");

                    b.HasOne("ITJobs.Model.Models.ProgrammingLanguage", "ProgrammingLanguage")
                        .WithMany()
                        .HasForeignKey("ProgrammingLanguageId");
                });
#pragma warning restore 612, 618
        }
    }
}
